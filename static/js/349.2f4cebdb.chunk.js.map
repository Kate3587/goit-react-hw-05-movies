{"version":3,"file":"static/js/349.2f4cebdb.chunk.js","mappings":"iUAEaA,EAAcC,EAAAA,GAAAA,QAAH,wFAKXC,EAAYD,EAAAA,GAAAA,GAAH,uJAOTE,EAAWF,EAAAA,GAAAA,GAAH,iNAURG,EAAWH,EAAAA,GAAAA,GAAH,sIAQRI,EAAeJ,EAAAA,GAAAA,IAAH,0UAmBZK,EAAUL,EAAAA,GAAAA,IAAH,wRAkBPM,EAAQN,EAAAA,GAAAA,IAAH,2FAMLO,EAAeP,EAAAA,GAAAA,EAAH,2I,SCPzB,EAvDa,WACX,OAA0BQ,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAqDC,EAAAA,EAAAA,GACnDC,EAAAA,EAAAA,MADMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,gBAoBjC,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCAId,gHAE8BC,EAAAA,EAAAA,MAF9B,gBAEYC,EAFZ,EAEYA,QACRT,GAAS,OAAIS,IACbH,EAAgBJ,EAAAA,EAAAA,SAJpB,gDAMII,EAAgBJ,EAAAA,EAAAA,OAChBQ,QAAQC,IAAI,KAAMC,SAPtB,0DAJc,sBACdN,EAAgBJ,EAAAA,EAAAA,SADF,mCAEdW,EAYD,GAAE,CAACP,KAGF,UAACjB,EAAD,YACE,SAACE,EAAD,6BACCa,IAAW,SAACU,EAAA,EAAD,IACXT,IAAS,SAACU,EAAA,EAAD,IACTZ,IACC,SAACX,EAAD,UACGO,EAAMiB,KAAI,YAAuC,IAApCC,EAAmC,EAAnCA,GAAIC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,MAAOC,EAAkB,EAAlBA,YAC7B,OACE,SAAC3B,EAAD,WACE,SAACC,EAAD,WACA,UAAC,KAAD,CAAM2B,GAAE,kBAAaJ,GAArB,WACE,UAACrB,EAAD,YACE,SAACD,EAAD,KACA,gBACE2B,MAAO,QACPC,IAAG,yCAAoCH,GACvCI,IAAG,OAAEN,QAAF,IAAEA,EAAAA,EAAQC,QAGjB,SAACtB,EAAD,iBAAeqB,QAAf,IAAeA,EAAAA,EAAQC,UAXZF,EAiBlB,QAKV,C","sources":["pages/Home/Home.styled.jsx","pages/Home/Home.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const HomeSection = styled.section`\n  margin: 0 auto;\n  max-width: 1200px;\n  padding: 20px 10px;\n`;\nexport const HomeTitle = styled.h2`\n  text-align: center;\n  font-size: 32px;\n  font-weight: 700;\n  color: rgba(205, 224, 238, 0.905);\n  margin-bottom: 20px; \n`;\nexport const HomeList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350px,1fr));\n  gap: 30px;\n  justify-content: center;\n\n  padding: 10px;\n  list-style: none;\n  overflow: hidden;\n`;\nexport const HomeCard = styled.li`\n  border-radius: 6px;\n  overflow: hidden;\n  &:hover{\n    transition: scale, 200ms;\n    scale: 1.03;\n  }\n`;\nexport const HomeCardLink = styled.div`\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n  text-decoration: none;\n  font-size: 20px;\n  line-height: 24px;\n  font-weight: 500;\n  text-decoration: none;\n  color: #fff;\n  transition: color 200ms;\n\n  &:hover,\n  &:focus{\n  color: #847cf476;\n}\n`;\n\nexport const Overlay = styled.div`\n position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  /* background: linear-gradient(0.40turn, #71707b 70%, #0e19af); */\n  \n  opacity: 0.4;\n  transition: opacity, 200ms;\n  \n  /* &:hover,\n  &:focus{\n  opacity: 0;\n    } */\n    \n`;\n\nexport const Wrapp = styled.div`\n  position: relative;\n  border-radius: 6px;\n  overflow: hidden;\n`;\n\nexport const HomeFilmName = styled.p`\n  margin-top: 15px;\n  font-size: 20px;\n  color: #c9c2f3b8\n  \n  &:hover,\n  &:focus{\n    color: #ffffff;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { fetchMovies } from 'services/Api/Api';\nimport { Link } from 'react-router-dom';\nimport { Status } from 'services/config/Status';\nimport { useStateMachine } from 'helpers/hooks/stateMachine';\nimport { Loader } from 'components/Loader';\nimport { ErrorMessage } from 'components/ErrorMessage';\nimport {\n  HomeSection, HomeTitle, HomeList, HomeCard,\n  HomeCardLink, Overlay, Wrapp, HomeFilmName\n} from './Home.styled';\n\n\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n  const { success, loading, error, setStateMachine } = useStateMachine(\n    Status.IDLE\n  );\n\n  useEffect(() => {\n    setStateMachine(Status.LOADING);\n    get();\n\n    async function get() {\n      try {\n        const { results } = await fetchMovies();\n        setFilms([...results]);\n        setStateMachine(Status.SUCCESS);\n      } catch (error) {\n        setStateMachine(Status.ERROR);\n        console.log(error.message);\n      }\n    }\n  }, [setStateMachine]);\n\n  return (\n    <HomeSection>\n      <HomeTitle>Trending today</HomeTitle>\n      {loading && <Loader />}\n      {error && <ErrorMessage />}\n      {success && (\n        <HomeList>\n          {films.map(({ id, name, title, poster_path }) => {\n            return (\n              <HomeCard key={id}>\n                <HomeCardLink>\n                <Link to={`/movies/${id}`}>\n                  <Wrapp>\n                    <Overlay></Overlay>\n                    <img\n                      width={'250px'}\n                      src={`https://image.tmdb.org/t/p/w400${poster_path}`}\n                      alt={name ?? title}\n                    />\n                  </Wrapp>\n                  <HomeFilmName>{name ?? title}</HomeFilmName>\n                </Link>\n                </HomeCardLink>\n                \n              </HomeCard>\n            );\n          })}\n        </HomeList>\n      )}\n    </HomeSection>\n  );\n};\n\nexport default Home;"],"names":["HomeSection","styled","HomeTitle","HomeList","HomeCard","HomeCardLink","Overlay","Wrapp","HomeFilmName","useState","films","setFilms","useStateMachine","Status","success","loading","error","setStateMachine","useEffect","fetchMovies","results","console","log","message","get","Loader","ErrorMessage","map","id","name","title","poster_path","to","width","src","alt"],"sourceRoot":""}