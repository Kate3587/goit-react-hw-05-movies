{"version":3,"file":"static/js/721.71bcdb0a.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/Movie/Description/DescriptionAttribute/DescriptionAttribute.styled.jsx","components/Movie/Description/DescriptionAttribute/DescriptionAttribute.jsx","components/Movie/Description/Company/Company.styled.jsx","components/Movie/Description/Company/Company.jsx","components/Movie/Description/Description.styled.jsx","components/Movie/Description/Description.jsx","components/Movie/Preview/Preview.styled.jsx","components/Movie/Preview/Preview.jsx","components/Movie/Movie.styled.jsx","components/Movie/Movie.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","import styled from \"styled-components\";\n\nexport const AttributeList = styled.ul`\n    margin-bottom: 40px;\n`;\nexport const AttributeListItem = styled.li`\n  display: grid;\n  grid-template-columns: 1fr 2fr;\n  align-items: baseline;\n\n  &:not(:last-child){\n  margin-bottom: 20px;\n}\n`;\nexport const ItemName = styled.p`\n  color:rgb(226, 221, 221);\n  font-size: 20px;  \n`;\nexport const ItemProperty = styled.p`\n  font-size: 16px;\n  color: rgb(170, 167, 167);\n`;\n","import PropTypes from 'prop-types';\nimport { AttributeList, AttributeListItem, ItemName, ItemProperty } from './DescriptionAttribute.styled';\n\n\nexport const DescriptionAttribute = ({ movie }) => {\n  const {\n    original_title = '',\n    adult,\n    release_date = '',\n    spoken_languages = '',\n    runtime = 0,\n    budget = 0,\n    genres = [],\n    production_countries = [],\n  } = movie;\n  return (\n    <AttributeList>\n      {adult && (\n        <AttributeListItem>\n          <ItemName>Age:</ItemName>\n          <ItemProperty>{adult ? '18+' : '0+'}</ItemProperty>\n        </AttributeListItem>\n      )}\n      {release_date && (\n        <AttributeListItem>\n          <ItemName>Release date:</ItemName>\n          <ItemProperty>{release_date}</ItemProperty>\n        </AttributeListItem>\n      )}\n\n      {budget ? (\n        <AttributeListItem>\n          <ItemName>Budget:</ItemName>\n          <ItemProperty>{(budget / 1000000).toFixed(1)}M $</ItemProperty>\n        </AttributeListItem>\n      ) : null}\n\n      {original_title && (\n        <AttributeListItem>\n          <ItemName>Original name:</ItemName>\n          <ItemProperty>{original_title}</ItemProperty>\n        </AttributeListItem>\n      )}\n      {spoken_languages > 0 && (\n        <AttributeListItem>\n          <ItemName>Langugaes:</ItemName>\n          <ItemProperty>\n            {spoken_languages.map(({ english_name }) => english_name).join(' ')}\n          </ItemProperty>\n        </AttributeListItem>\n      )}\n      {genres > 0 && (\n        <AttributeListItem>\n          <ItemName>Genres:</ItemName>\n          <ItemProperty>\n            {genres.map(({ name }) => name).join(' ')}\n          </ItemProperty>\n        </AttributeListItem>\n      )}\n      {runtime && (\n        <AttributeListItem>\n          <ItemName>Duration:</ItemName>\n          <ItemProperty>{(runtime / 60).toFixed(2)} h</ItemProperty>\n        </AttributeListItem>\n      )}\n      {production_countries > 0 && (\n        <AttributeListItem>\n          <ItemName>Countries:</ItemName>\n          <ItemProperty>\n            {production_countries.map(({ name }) => name).join(' ')}\n          </ItemProperty>\n        </AttributeListItem>\n      )}\n    </AttributeList>\n  );\n};\n\nDescriptionAttribute.propTypes = {\n  movie: PropTypes.shape({\n    original_title: PropTypes.string,\n    adult: PropTypes.bool,\n    release_date: PropTypes.string,\n    spoken_languages: PropTypes.arrayOf(\n      PropTypes.shape({ english_name: PropTypes.string })\n    ),\n    runtime: PropTypes.number,\n    budget: PropTypes.number,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n    production_countries: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n      })\n    ),\n  }),\n};","import styled from \"styled-components\";\n\nexport const CompanyItem = styled.li`\n   display: flex;\n  align-items: center;\n  border-radius:6px;\n  overflow: hidden;\n  cursor:help;\n`;\n\nexport const CompanyItemThumb = styled.div`\n  display: block;\n  width: 100px;\n  height: auto;\n`;\n\nexport const CompanyItemImage = styled.img`\n  margin-top: auto;\n`;\n\n\n","import PropTypes from 'prop-types';\nimport { CompanyItem, CompanyItemThumb, CompanyItemImage } from './Company.styled';\n\n\nexport const Company = ({ company }) => {\n  const { logo_path, name } = company;\n  return (\n    <CompanyItem>\n      <CompanyItemThumb>\n        {logo_path && (\n          <CompanyItemImage\n            width={'100px'}\n            title={name}\n            src={`https://image.tmdb.org/t/p/original${logo_path}`}\n            alt={name}\n          />\n        )}\n      </CompanyItemThumb>\n    </CompanyItem>\n  );\n};\n\nCompany.propTypes = {\n  cologo_pathmpany: PropTypes.shape({\n    logo_path: PropTypes.string,\n    name: PropTypes.string,\n  }),\n};","import styled from \"styled-components\";\n\nexport const DescriptionText = styled.div`\n   position: relative;\n    order: 1;\n`;\nexport const ExitLink = styled.div`\n  position: absolute;\n  right: 10px;\n  top: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 10px;\n\n  padding: 10px;\n\n  text-decoration: none;\n  color: white;\n\n  border: 1px solid white;\n  border-radius: 10px;\n\n  transition: border-color linear 200ms, color linear 200ms;\n\n  &:hover,\n  &:focus{\n    color: #fcf8f8;\n  border-color: #ff0000;\n  }\n`;\n\nexport const DescriptionTitle = styled.h2`\n   max-width: 500px;\n  font-size: 32px;\n  font-weight: 700;\n  color: #ffffffe4;\n  margin-bottom: 20px;\n`;\n\nexport const DescriptionTextWrapp = styled.div`\n   padding: 15px;\n  background-color: #0f023c7b;\n  border-radius: 10px;\n  overflow: hidden;\n  min-height: 200px;\n`\n\nexport const DescriptionOverview = styled.p`\n   min-width: 600px;\n  margin-bottom: 20px;\n  font-size: 16px;\n  line-height: 1.6;\n  color: #fffffff3;\n`;\n\nexport const DescriptionCompanyList = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 10px;\n  padding-bottom: 20px;\n`;\n\n\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { DescriptionAttribute } from './DescriptionAttribute/DescriptionAttribute'\nimport { Company } from './Company';\nimport {\n  DescriptionText, ExitLink, DescriptionTitle,\n  DescriptionTextWrapp, DescriptionOverview, DescriptionCompanyList\n} from './Description.styled';\n\n\nexport const Description = ({ fields, state }) => {\n  const { title, movie, overview, production_companies } = fields;\n  return (\n    <DescriptionText>\n      <ExitLink>\n        <Link to={state?.from ?? '/'}>\n          <span>Turn back</span>\n        </Link>\n      </ExitLink>\n      \n      <DescriptionTitle>{title}</DescriptionTitle>\n      <DescriptionTextWrapp>\n        <DescriptionAttribute movie={movie} />\n        <DescriptionOverview>{overview}</DescriptionOverview>\n\n        <DescriptionCompanyList>\n          {production_companies.map(company => {\n            if (!company.logo_path) {\n              return null;\n            } else {\n              return <Company company={company} key={company.id} />;\n            }\n          })}\n        </DescriptionCompanyList>\n      </DescriptionTextWrapp>\n    </DescriptionText>\n  );\n};\n\nDescription.propTypes = {\n  fields: PropTypes.shape({\n    title: PropTypes.string,\n    movie: PropTypes.object,\n    overview: PropTypes.string,\n    production_companies: PropTypes.array,\n  }),\n  state: PropTypes.shape({\n    from: PropTypes.shape({\n      pathname: PropTypes.string,\n      search: PropTypes.string,\n    }),\n  }),\n};","import styled from \"styled-components\";\n\nexport const PreviewWrapp = styled.div`\n  display: flex;\n`;\n\nexport const PreviewPicture = styled.div`\n  order: 2;\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport const PictureThumb = styled.div`\n  width: 300px;\n  border-radius: 10px;\n  overflow: hidden;\n  margin: 0 auto 20px;\n \n`;\n\nexport const PictureTag = styled.p`\n  text-align: center;\n  font-size: 20px;\n`;\nexport const PictureLink = styled.ul`\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-top: 30px;\n`;\nexport const PictureLinkItem = styled.li`\n  border: 1px solid rgb(255, 255, 255);\n  border-radius: 10px;\n  transition: border-color linear 200ms, color linear 200ms;\n  color: ffffffc1;\n\n  &:hover,\n  &:focus {\n    border-color: #1404ed;\n    color: #1302f7\n  }\n`;\n\nexport const MoreLinkItem = styled.div`\n  display: block;\n  padding: 10px 5px;\n  font-family: 'Roboto', sans-serif;\n  text-decoration: none;\n  color: #ffffffc1;\n\n =\n`;\n","import PropTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\nimport defaultMovie from '../../../images/defaultMovie.png';\nimport {\n  PreviewWrapp, PreviewPicture, PictureThumb,\n  PictureTag, PictureLink, PictureLinkItem, MoreLinkItem\n} from './Preview.styled';\n\n\nexport const Preview = ({ filmCard }) => {\n  const { poster_path, title, name, tagline } = filmCard;\n  return (\n    <PreviewWrapp>\n      <PreviewPicture>\n        <PictureThumb>\n          <img\n            width={'300px'}\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                : defaultMovie\n            }\n            alt={title ?? name}\n          />\n        </PictureThumb>\n        <PictureTag>{tagline}</PictureTag>\n\n        <PictureLink>\n          <PictureLinkItem>\n              <NavLink to=\"cast\">\n                <MoreLinkItem>\n                  Cast\n                </MoreLinkItem>\n            </NavLink>\n          </PictureLinkItem>\n          <PictureLinkItem>\n              <NavLink to=\"reviews\">\n                <MoreLinkItem>\n                  Reviews\n                </MoreLinkItem>\n            </NavLink>\n          </PictureLinkItem>\n        </PictureLink>\n      </PreviewPicture>\n    </PreviewWrapp>\n  );\n};\n\nPreview.propTypes = {\n  filmCard: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    name: PropTypes.string,\n    tagline: PropTypes.string,\n  }),\n};","import styled from \"styled-components\";\n\nexport const MovieSection = styled.section`\n  background-attachment: fixed;\n  background-position: top center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 20px 10px;\n`;\n\nexport const MovieWrapp = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n\n  max-width: 1200px;\n\n  margin: 0 auto;\n  padding: 20px 10px;\n\n  color:white;\n`;\n\n\n\n","import { Outlet, useLocation } from 'react-router-dom';\nimport { Description } from './Description';\nimport PropTypes from 'prop-types';\nimport { Preview } from './Preview';\nimport {MovieSection, MovieWrapp} from './Movie.styled'\n\n\nexport const Movie = ({ movie }) => {\n  const { state } = useLocation();\n  const {\n    name,\n    title,\n    poster_path,\n    backdrop_path,\n    overview,\n    tagline,\n    production_companies,\n  } = movie;\n  return (\n    <MovieSection\n      style={{\n        backgroundImage: `linear-gradient( rgba(191, 194, 245, 0.95),\n         rgba(24, 26, 45, 0.95)),\n         url(https://image.tmdb.org/t/p/w500${backdrop_path})`,\n      }}\n    >\n      <MovieWrapp>\n        <Preview filmCard={{ poster_path, title, name, tagline }} />\n        <Description\n          fields={{ title, movie, overview, production_companies }}\n          state={state}\n        />\n      </MovieWrapp>\n      <Outlet />\n    </MovieSection>\n  );\n};\n\nMovie.propTypes = {\n  movie: PropTypes.shape({\n    name: PropTypes.string,\n    title: PropTypes.string,\n    poster_path: PropTypes.string,\n    backdrop_path: PropTypes.string,\n    overview: PropTypes.string,\n    tagline: PropTypes.string,\n    production_companies: PropTypes.array,\n  }),\n};","import { fetchMovieDetails } from 'services/Api/Api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Status } from 'services/config/Status';\nimport { useStateMachine } from 'helpers/hooks/stateMachine';\nimport { Movie } from 'components/Movie';\nimport { Loader } from 'components/Loader';\nimport { ErrorMessage } from 'components/ErrorMessage';\n\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const { success, loading, error, setStateMachine } = useStateMachine(\n    Status.IDLE\n  );\n\n  useEffect(() => {\n    setStateMachine(Status.LOADING);\n    get();\n\n    async function get() {\n      try {\n        const responce = await fetchMovieDetails(movieId);\n        setMovie({ ...responce });\n        setStateMachine(Status.SUCCESS);\n      } catch (error) {\n        setStateMachine(Status.ERROR);\n        console.log(error.message);\n      }\n    }\n  }, [movieId, setStateMachine]);\n\n  if (success) return <Movie movie={movie} />;\n  if (loading) return <Loader />;\n  if (error) return <ErrorMessage />;\n};\n\nexport default MovieDetails;"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","AttributeList","styled","AttributeListItem","ItemName","ItemProperty","DescriptionAttribute","movie","original_title","adult","release_date","spoken_languages","runtime","budget","genres","production_countries","toFixed","map","english_name","join","name","CompanyItem","CompanyItemThumb","CompanyItemImage","Company","company","logo_path","width","title","src","alt","DescriptionText","ExitLink","DescriptionTitle","DescriptionTextWrapp","DescriptionOverview","DescriptionCompanyList","Description","fields","state","overview","production_companies","to","from","id","PreviewWrapp","PreviewPicture","PictureThumb","PictureTag","PictureLink","PictureLinkItem","MoreLinkItem","Preview","filmCard","poster_path","tagline","defaultMovie","MovieSection","MovieWrapp","Movie","useLocation","backdrop_path","style","backgroundImage","useState","setMovie","movieId","useParams","useStateMachine","Status","success","loading","error","setStateMachine","useEffect","fetchMovieDetails","responce","console","log","message","get","Loader","ErrorMessage"],"sourceRoot":""}