{"version":3,"file":"static/js/936.f5a914d0.chunk.js","mappings":"wVAEaA,EAAgBC,EAAAA,GAAAA,GAAH,+NAabC,EAAgBD,EAAAA,GAAAA,IAAH,0EAMbE,EAAoBF,EAAAA,GAAAA,IAAH,sKAYjBG,EAAoBH,EAAAA,GAAAA,IAAH,kKAQjBI,EAAiBJ,EAAAA,GAAAA,EAAH,mJASdK,EAAgBL,EAAAA,GAAAA,EAAH,+F,SCzCbM,EAAY,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAC1BC,QAAQC,IAAKF,GACb,IAAQG,EAAmDH,EAAnDG,YAAaC,EAAsCJ,EAAtCI,MAAOC,EAA+BL,EAA/BK,aAAcC,EAAiBN,EAAjBM,GAAIC,EAAaP,EAAbO,SACxCC,GAAWC,EAAAA,EAAAA,MACjB,OAEE,SAACjB,EAAD,WACE,SAACE,EAAD,WAEE,SAAC,KAAD,CACAgB,GAAE,kBAAaJ,GACfK,MAAO,CAAEC,KAAMJ,GAFf,UAIA,UAACb,EAAD,YAEE,SAACC,EAAD,CACEiB,MAAO,QACPC,IACEX,EAAW,yCAC2BA,GAClCY,EAENC,IAAKZ,KAGT,6BACE,SAACP,EAAD,UAAiBO,KACjB,SAACN,EAAD,UAAgBO,KAChB,SAACP,EAAD,UAAgBS,eASzB,EC5CYU,EAAkBxB,EAAAA,GAAAA,IAAH,+CAIfyB,EAAiBzB,EAAAA,GAAAA,GAAH,8HAOd0B,EAAqB1B,EAAAA,GAAAA,GAAH,0IAQlB2B,EAAgB3B,EAAAA,GAAAA,OAAH,oNAab4B,EAAS5B,EAAAA,GAAAA,OAAH,qPC3BN6B,EAAa,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,WAAYC,EAA2B,EAA3BA,eACjCC,GAD4D,EAAXC,KAEvD,OACE,SAACT,EAAD,WACE,SAACC,EAAD,WACG,OAAIS,MAAMJ,IAAaK,KAAI,SAACC,EAAGC,GAC9B,IAAMC,EAAWD,EAAS,EAC1B,OACE,SAACX,EAAD,WACE,SAACC,EAAD,CACEY,UAAWP,IAAgBM,GAAW,SAACZ,EAAD,KAAwB,SAACE,EAAD,IAC9DY,QAAS,kBAAMT,EAAe,CAAEM,OAAQC,GAA/B,EACTG,KAAK,SAHP,SAKGH,KAIR,OAIR,E,SC3BYI,EAAgB1C,EAAAA,GAAAA,KAAH,sEAIb2C,EAAc3C,EAAAA,GAAAA,IAAH,+CAGX4C,EAAY5C,EAAAA,GAAAA,MAAH,ucA6BT6C,EAAU7C,EAAAA,GAAAA,OAAH,wnBChCP8C,GAAa,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAC3B,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAQA,OACE,SAACR,EAAD,CAAeS,SANA,SAAAC,GACfA,EAAMC,iBACNN,EAAe,CAAEO,MAAOL,GACzB,EAGC,UACE,UAACN,EAAD,YACE,SAACC,EAAD,CACEW,KAAK,OACLC,SAXS,SAAAJ,GAAK,OAAIF,EAASE,EAAMK,OAAOH,MAA1B,EAYdI,YAAY,YACZJ,MAAOL,IAERA,IACC,SAACJ,EAAD,CAASJ,KAAK,SAAd,UACE,SAAC,MAAD,UAMX,E,kBC9BYkB,GAAiB3D,EAAAA,GAAAA,QAAH,yFAMd4D,GAAgB5D,EAAAA,GAAAA,GAAH,0GASb6D,GAAc7D,EAAAA,GAAAA,GAAH,mMCsExB,GA1EkB,WAAO,IAAD,IACtB,GAA4BgD,EAAAA,EAAAA,UAAS,IAArC,eAAOc,EAAP,KAAeC,EAAf,KACA,GAAoCf,EAAAA,EAAAA,UAAS,GAA7C,eAAOlB,EAAP,KAAmBkC,EAAnB,KACA,GAA0BC,EAAAA,EAAAA,MAA1B,eAAOhB,EAAP,KAAcC,EAAd,KACA,GAAqDgB,EAAAA,EAAAA,GACnDC,EAAAA,EAAAA,MADMC,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,MAAOC,EAAjC,EAAiCA,gBAI3BC,EAAW,UAAGvB,EAAMwB,IAAI,mBAAb,QAA4B,GACvCC,EAAO,UAAGzB,EAAMwB,IAAI,qBAAb,QAA8B,EAErCE,EAAmB,SAAC,GAAyC,IAAD,IAAtCrB,MAAAA,OAAsC,MAA9BkB,EAA8B,MAAjBnC,OAC/Ca,EAASI,EAAQ,CAAEsB,SAAUtB,EAAOuB,gBAD4B,MAAR,EAAQ,GACL,CAAC,EAC7D,GAEDC,EAAAA,EAAAA,YAAU,WAAM,wCAMd,kHAE2CC,EAAAA,EAAAA,IACrCP,EACAE,GAJN,gBAEYM,EAFZ,EAEYA,QAASC,EAFrB,EAEqBA,YAIjBlB,GAAU,OAAIiB,IACdhB,EAAciB,GACdV,EAAgBJ,EAAAA,EAAAA,SARpB,kDAUII,EAAgBJ,EAAAA,EAAAA,OAChB3D,QAAQC,IAAI,KAAMyE,SAXtB,2DANc,sBACVV,IACFD,EAAgBJ,EAAAA,EAAAA,SAFJ,mCAGZM,GAiBH,GAAE,CAACD,EAAaE,EAASH,IAC1B/D,QAAQC,IAAIqD,GAEZ,IAAMqB,EAAerB,EAAOsB,OAC5B,OAEE,UAACzB,GAAD,YACE,SAACb,GAAD,CAAYC,eAAgB4B,IAC3BN,IAAW,SAACgB,GAAA,EAAD,IACXF,EAAe,GAAKf,IACnB,SAACR,GAAD,UAGGE,EAAO3B,KAAI,SAACmD,GAAD,OAEV,SAAChF,EAAD,CAEEC,KAAM+E,GADDA,EAAMzE,GAHH,MASfuD,GAA4B,IAAjBe,IACV,UAACtB,GAAD,2DACgDZ,EADhD,OAIDqB,IAAS,SAACiB,GAAA,EAAD,IACTzD,EAAa,GAAKsC,IACjB,SAACvC,EAAD,CACEC,WAAYA,EACZG,KAAMyC,EACN3C,eAAgB4C,MAKzB,C","sources":["components/MovieCard/MovieCard.styled.jsx","components/MovieCard/MovieCard.jsx","components/Pagination/Pagination.styled.jsx","components/Pagination/Pagination.jsx","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.jsx","pages/MoviePage/MoviePage.styled.jsx","pages/MoviePage/MoviePage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const MovieCardItem = styled.li`\n  flex-basis: calc((100% - 20px * 2) / 2);\n  padding: 20px;\n  background-color: #161a3f86;\n  border-radius: 6px;\n  overflow: hidden;\n\n  \n\n  &:not(:last-child) {\n  margin-bottom: 15px;\n  }\n`;\nexport const MovieCardWrap = styled.div`\n  display: flex;\n  justify-content: baseline;\n\n`;\n\nexport const MovieCardItemLink = styled.div`\n  display: inline-flex;\n  gap: 15px;\n  text-decoration: none;\n  color: #b29efa8e;\n\n  &:hover,\n  &:focus{\n  transform: scale(1.01);\n}\n`;\n\nexport const MovieCardImgThumb = styled.img`\n\n  width: 150px;\n  flex-shrink: 0;\n  transition: transform linear 200ms;\n  box-shadow: -1px 0px 21px -7px rgba(253, 253, 253, 0.96);\n`;\n\nexport const MovieCardTitle = styled.p`\n\n  font-weight: 700;\n  font-size: 20px;\n  margin-bottom: 10px;\n  transition: color linear 200ms;\n  color: #eaeafeb9;\n`;\n\nexport const MovieCardText = styled.p`\n  color#c2c2ffb8b9;\n  &:not(:last-child){\n  margin-bottom: 10px;\n}\n`;\n\n\n\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport defaultMovie from '../../images/defaultMovie.png'\nimport {\n  MovieCardItem, MovieCardItemLink, MovieCardImgThumb,\n  MovieCardTitle, MovieCardText, MovieCardWrap\n} from './MovieCard.styled';\n\n\nexport const MovieCard = ({ data }) => {\n  console.log (data)\n  const { poster_path, title, release_date, id, overview } = data;\n  const location = useLocation();\n  return (\n   \n    <MovieCardItem>\n      <MovieCardWrap>\n        \n        <Link\n        to={`/movies/${id}`}\n        state={{ from: location }}\n        >\n        <MovieCardItemLink>\n       \n          <MovieCardImgThumb\n            width={'150px'}\n            src={\n              poster_path\n                ? `https://image.tmdb.org/t/p/w200${poster_path}`\n                : defaultMovie\n            }\n            alt={title}\n          />\n   \n        <span>\n          <MovieCardTitle>{title}</MovieCardTitle>\n          <MovieCardText>{release_date}</MovieCardText>\n          <MovieCardText>{overview}</MovieCardText>\n        </span>\n        \n        </MovieCardItemLink>\n        </Link>\n      </MovieCardWrap>\n      \n    </MovieCardItem>\n  );\n};\n\nMovieCard.propTypes = {\n  data: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    id: PropTypes.number,\n    overview: PropTypes.string,\n  }),\n};\n\n","import styled from \"styled-components\";\n\nexport const PaginationWrapp = styled.div`\n  text-align: center;\n`;\n\nexport const PaginationList = styled.ul`\n  display: inline-block;\n  background-color: #58575787;\n  border-radius: 6px;\n  overflow: hidden;\n`;\n\nexport const PaginationListItem = styled.li`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  height: 40px;\n  min-width: 40px;\n`;\n\nexport const PaginationBtn = styled.button`\n  padding: 5px;\n  width: 100%;\n  height: 100%;\n\n  color: white;\n  font-size: 18px;\n\n  background-color: transparent;\n  border: none;\n  transition: background-color linear 200ms;\n`;\n\nexport const Active = styled.button`\n   padding: 5px;\n  width: 100%;\n  height: 100%;\n\n  color: white;\n  font-size: 18px;\n\n  background-color: transparent;\n  border: none;\n  transition: background-color linear 200ms;\n  background-color: #55545487;\n`\n","import PropTypes from 'prop-types';\nimport {\n  PaginationWrapp, PaginationList, PaginationListItem,\n  PaginationBtn, Active\n} from './Pagination.styled';\n\n\nexport const Pagination = ({ totalPages, paginationFunc, page }) => {\n  const currentPage = +page;\n  return (\n    <PaginationWrapp>\n      <PaginationList>\n        {[...Array(totalPages)].map((_, number) => {\n          const nextPage = number + 1;\n          return (\n            <PaginationListItem>\n              <PaginationBtn\n                className={currentPage !== nextPage ? <PaginationListItem/> : <Active/>}\n                onClick={() => paginationFunc({ number: nextPage })}\n                type=\"button\"\n              >\n                {nextPage}\n              </PaginationBtn>\n            </PaginationListItem>\n          );\n        })}\n      </PaginationList>\n    </PaginationWrapp>\n  );\n};\n\nPagination.propTypes = {\n  totalPages: PropTypes.number,\n  paginationFunc: PropTypes.func,\n  page: PropTypes.string,\n};","import styled from \"styled-components\";\n\nexport const FormForSearch = styled.form`\n  display: flex;\n  justify-content: center;\n`;\nexport const FormWrapper = styled.div`\n  position: relative;\n`;\nexport const FormInput = styled.input`\n  height: 40px;\n\n  font-size: 24px;\n  color: white;\n  background: transparent;\n\n  border: none;\n  outline: none;\n  border-bottom: 4px solid #817d7d88;\n  transition: border-color linear 200ms;\n\n  &:focus{\n    border-color: #1919d7}\n  &:hover{\n  border-color: #1919d7}\n\n  &::placeholder{\n transition: color linear 200ms\n}\n\n  &:focus::placeholder{\n  color: #0000ed;\n}\n  &:hover::placeholder{\n  color :red;\n}\n`;\n\nexport const FormBtn = styled.button`\n  position: absolute;\n  right: 0;\n  top: 0;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 40px;\n  margin-left: 10px;\n  padding: 0 10px;\n\n  font-size: 24px;\n  color: white;\n\n  background-color: #817d7d88;\n  border:none;\n  border-radius:2px;\n\n  transform: translateX(calc(100% + 10px));\n  transition: transform linear 100ms, background-color linear 200ms;\n\n  animation: visible 1000ms;\n  animation-direction: alternate;\n\n  &:hover,\n  &:focus{\n  cursor: pointer;\n  background-color:#a19c9c88;\n  transform: scale(1.02) translateX(calc(100% + 10px));\n}\n`;\n\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { ImSearch } from 'react-icons/im';\nimport { FormForSearch, FormWrapper, FormInput, FormBtn } from './SearchForm.styled';\n\n\nexport const SearchForm = ({ onHandleSubmit }) => {\n  const [query, setQuery] = useState('');\n\n  const onChange = event => setQuery(event.target.value);\n  const onSubmit = event => {\n    event.preventDefault();\n    onHandleSubmit({ value: query });\n  };\n\n  return (\n    <FormForSearch onSubmit={onSubmit}>\n      <FormWrapper>\n        <FormInput\n          name=\"film\"\n          onChange={onChange}\n          placeholder=\"Film name\"\n          value={query}\n        />\n        {query && (\n          <FormBtn type=\"submit\">\n            <ImSearch />\n          </FormBtn>\n        )}\n      </FormWrapper>\n    </FormForSearch>\n  );\n};\nSearchForm.propTypes = {\n  onHandleSubmit: PropTypes.func,\n};","import styled from \"styled-components\";\n\nexport const MoviePageWrapp = styled.section`\n   margin: 0 auto;\n  max-width: 1200px;\n  padding: 20px 10px;\n`;\n\nexport const MoviePageList = styled.ul`\n  display: inline-flex;\n  gap: 20px;\n \n\n  flex-wrap: wrap;\n  padding: 25px;\n`;\n\nexport const ExitMessage = styled.h2`\n  margin: 40px auto 0;\n  padding: 20px;\n  background-color: #000f2787;\n  border-radius: 6px;\n  overflow: hidden;\n  text-align: center;\n  color: rgb(226, 221, 221);\n`;","import { fetchMovieByName } from 'services/Api/Api';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { Status } from 'services/config/Status';\nimport { useStateMachine } from 'helpers/hooks/stateMachine';\nimport { MovieCard } from 'components/MovieCard';\nimport { Pagination } from 'components/Pagination';\nimport { SearchForm } from 'components/SearchForm';\nimport { Loader } from 'components/Loader';\nimport { ErrorMessage } from 'components/ErrorMessage';\nimport {MoviePageWrapp, MoviePageList, ExitMessage} from './MoviePage.styled'\n\n\nconst MoviePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [totalPages, setTotalPages] = useState(1);\n  const [query, setQuery] = useSearchParams();\n  const { success, loading, error, setStateMachine } = useStateMachine(\n    Status.IDLE\n  );\n\n  const filmNameStr = query.get('filmName') ?? '';\n  const pageStr = query.get('pageNumber') ?? 1;\n\n  const handleWriteQuery = ({ value = filmNameStr, number = 1 }) => {\n    setQuery(value ? { filmName: value, pageNumber: number } : {});\n  };\n\n  useEffect(() => {\n    if (filmNameStr) {\n      setStateMachine(Status.LOADING);\n      get();\n    }\n\n    async function get() {\n      try {\n        const { results, total_pages } = await fetchMovieByName(\n          filmNameStr,\n          pageStr\n        );\n        setMovies([...results]);\n        setTotalPages(total_pages);\n        setStateMachine(Status.SUCCESS);\n      } catch (error) {\n        setStateMachine(Status.ERROR);\n        console.log(error.message);\n      }\n    }\n  }, [filmNameStr, pageStr, setStateMachine]);\n  console.log(movies)\n\n  const moviesAmount = movies.length;\n  return (\n    \n    <MoviePageWrapp>\n      <SearchForm onHandleSubmit={handleWriteQuery} />\n      {loading && <Loader />}\n      {moviesAmount > 0 && success && (\n        <MoviePageList>\n          \n          {/* { poster_path, title, id, release_date, overview } */}\n          {movies.map((movie) => (\n            \n            <MovieCard\n              key={movie.id}\n              data={movie}\n            />\n          ))}\n        </MoviePageList>\n      )}\n      {success && moviesAmount === 0 && (\n        <ExitMessage>\n          Sorry, we haven't any information about film {query}.\n        </ExitMessage>\n      )}\n      {error && <ErrorMessage />}\n      {totalPages > 1 && success && (\n        <Pagination\n          totalPages={totalPages}\n          page={pageStr}\n          paginationFunc={handleWriteQuery}\n        />\n      )}\n    </MoviePageWrapp>\n  );\n};\n\nexport default MoviePage;"],"names":["MovieCardItem","styled","MovieCardWrap","MovieCardItemLink","MovieCardImgThumb","MovieCardTitle","MovieCardText","MovieCard","data","console","log","poster_path","title","release_date","id","overview","location","useLocation","to","state","from","width","src","defaultMovie","alt","PaginationWrapp","PaginationList","PaginationListItem","PaginationBtn","Active","Pagination","totalPages","paginationFunc","currentPage","page","Array","map","_","number","nextPage","className","onClick","type","FormForSearch","FormWrapper","FormInput","FormBtn","SearchForm","onHandleSubmit","useState","query","setQuery","onSubmit","event","preventDefault","value","name","onChange","target","placeholder","MoviePageWrapp","MoviePageList","ExitMessage","movies","setMovies","setTotalPages","useSearchParams","useStateMachine","Status","success","loading","error","setStateMachine","filmNameStr","get","pageStr","handleWriteQuery","filmName","pageNumber","useEffect","fetchMovieByName","results","total_pages","message","moviesAmount","length","Loader","movie","ErrorMessage"],"sourceRoot":""}